{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "c4b29876-ed7b-430a-9bef-d519ca9e88b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import tensorflow as tf\n",
    "import numpy as np\n",
    "df = pd.read_json(\"mp.json\")\n",
    "df2 = df.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "30c981bc-13a7-4198-856d-65d0888528ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2.16.1\n"
     ]
    }
   ],
   "source": [
    "print(tf.__version__)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "87e613bf-b817-4a81-a455-b82625cfd692",
   "metadata": {},
   "outputs": [],
   "source": [
    "df2.drop(columns=[\"G_VRH\", \"G_Reuss\", \"G_Voigt\", \"K_VRH\", \"K_Voigt\", \"K_Reuss\",\"composition\",\"formation_energy_per_atom\",\"hardness\"],inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "3e817d53-af8f-4c87-87f6-ab67d4743e34",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3 = df2.join(df['G_VRH'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "b02dc57d-0ae5-4be7-b740-256fff37b2e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>material_id</th>\n",
       "      <th>full_formula</th>\n",
       "      <th>H fraction</th>\n",
       "      <th>He fraction</th>\n",
       "      <th>Li fraction</th>\n",
       "      <th>Be fraction</th>\n",
       "      <th>B fraction</th>\n",
       "      <th>C fraction</th>\n",
       "      <th>N fraction</th>\n",
       "      <th>O fraction</th>\n",
       "      <th>...</th>\n",
       "      <th>mean Electronegativity</th>\n",
       "      <th>avg s valence electrons</th>\n",
       "      <th>avg p valence electrons</th>\n",
       "      <th>avg d valence electrons</th>\n",
       "      <th>avg f valence electrons</th>\n",
       "      <th>frac s valence electrons</th>\n",
       "      <th>frac p valence electrons</th>\n",
       "      <th>frac d valence electrons</th>\n",
       "      <th>frac f valence electrons</th>\n",
       "      <th>G_VRH</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>mp-10006</td>\n",
       "      <td>Tl1Ag1Te2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.937500</td>\n",
       "      <td>1.750000</td>\n",
       "      <td>2.250000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>0.100000</td>\n",
       "      <td>0.128571</td>\n",
       "      <td>0.571429</td>\n",
       "      <td>0.200000</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>mp-10018</td>\n",
       "      <td>Ac1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.100000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>mp-1008617</td>\n",
       "      <td>Yb1Ag2</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.706667</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>6.666667</td>\n",
       "      <td>4.666667</td>\n",
       "      <td>0.105263</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.526316</td>\n",
       "      <td>0.368421</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>mp-1008866</td>\n",
       "      <td>Na1Ag1O1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>...</td>\n",
       "      <td>2.100000</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>1.333333</td>\n",
       "      <td>3.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>0.555556</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>mp-1008903</td>\n",
       "      <td>Mg1Ag1Sb1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.763333</td>\n",
       "      <td>1.666667</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.178571</td>\n",
       "      <td>0.107143</td>\n",
       "      <td>0.714286</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13102</th>\n",
       "      <td>mp-972088</td>\n",
       "      <td>Zr3Zn1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.410000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.333333</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.666667</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13103</th>\n",
       "      <td>mp-972364</td>\n",
       "      <td>Yb3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.260000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>0.125000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.875000</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13105</th>\n",
       "      <td>mp-977585</td>\n",
       "      <td>Zr3Tl1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.402500</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.250000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>0.205128</td>\n",
       "      <td>0.025641</td>\n",
       "      <td>0.410256</td>\n",
       "      <td>0.358974</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13106</th>\n",
       "      <td>mp-979011</td>\n",
       "      <td>Tm1Zr1</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.290000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>6.500000</td>\n",
       "      <td>0.210526</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.105263</td>\n",
       "      <td>0.684211</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13111</th>\n",
       "      <td>mp-980014</td>\n",
       "      <td>Tm1Th3</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.287500</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>3.250000</td>\n",
       "      <td>0.296296</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.222222</td>\n",
       "      <td>0.481481</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>10534 rows × 123 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      material_id full_formula  H fraction  He fraction  Li fraction  \\\n",
       "0        mp-10006    Tl1Ag1Te2         0.0            0          0.0   \n",
       "1        mp-10018          Ac1         0.0            0          0.0   \n",
       "3      mp-1008617       Yb1Ag2         0.0            0          0.0   \n",
       "6      mp-1008866     Na1Ag1O1         0.0            0          0.0   \n",
       "7      mp-1008903    Mg1Ag1Sb1         0.0            0          0.0   \n",
       "...           ...          ...         ...          ...          ...   \n",
       "13102   mp-972088       Zr3Zn1         0.0            0          0.0   \n",
       "13103   mp-972364          Yb3         0.0            0          0.0   \n",
       "13105   mp-977585       Zr3Tl1         0.0            0          0.0   \n",
       "13106   mp-979011       Tm1Zr1         0.0            0          0.0   \n",
       "13111   mp-980014       Tm1Th3         0.0            0          0.0   \n",
       "\n",
       "       Be fraction  B fraction  C fraction  N fraction  O fraction  ...  \\\n",
       "0              0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "1              0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "3              0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "6              0.0         0.0         0.0         0.0    0.333333  ...   \n",
       "7              0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "...            ...         ...         ...         ...         ...  ...   \n",
       "13102          0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "13103          0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "13105          0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "13106          0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "13111          0.0         0.0         0.0         0.0    0.000000  ...   \n",
       "\n",
       "       mean Electronegativity  avg s valence electrons  \\\n",
       "0                    1.937500                 1.750000   \n",
       "1                    1.100000                 2.000000   \n",
       "3                    1.706667                 1.333333   \n",
       "6                    2.100000                 1.333333   \n",
       "7                    1.763333                 1.666667   \n",
       "...                       ...                      ...   \n",
       "13102                1.410000                 2.000000   \n",
       "13103                1.260000                 2.000000   \n",
       "13105                1.402500                 2.000000   \n",
       "13106                1.290000                 2.000000   \n",
       "13111                1.287500                 2.000000   \n",
       "\n",
       "       avg p valence electrons  avg d valence electrons  \\\n",
       "0                     2.250000                10.000000   \n",
       "1                     0.000000                 1.000000   \n",
       "3                     0.000000                 6.666667   \n",
       "6                     1.333333                 3.333333   \n",
       "7                     1.000000                 6.666667   \n",
       "...                        ...                      ...   \n",
       "13102                 0.000000                 4.000000   \n",
       "13103                 0.000000                 0.000000   \n",
       "13105                 0.250000                 4.000000   \n",
       "13106                 0.000000                 1.000000   \n",
       "13111                 0.000000                 1.500000   \n",
       "\n",
       "       avg f valence electrons  frac s valence electrons  \\\n",
       "0                     3.500000                  0.100000   \n",
       "1                     0.000000                  0.666667   \n",
       "3                     4.666667                  0.105263   \n",
       "6                     0.000000                  0.222222   \n",
       "7                     0.000000                  0.178571   \n",
       "...                        ...                       ...   \n",
       "13102                 0.000000                  0.333333   \n",
       "13103                14.000000                  0.125000   \n",
       "13105                 3.500000                  0.205128   \n",
       "13106                 6.500000                  0.210526   \n",
       "13111                 3.250000                  0.296296   \n",
       "\n",
       "       frac p valence electrons  frac d valence electrons  \\\n",
       "0                      0.128571                  0.571429   \n",
       "1                      0.000000                  0.333333   \n",
       "3                      0.000000                  0.526316   \n",
       "6                      0.222222                  0.555556   \n",
       "7                      0.107143                  0.714286   \n",
       "...                         ...                       ...   \n",
       "13102                  0.000000                  0.666667   \n",
       "13103                  0.000000                  0.000000   \n",
       "13105                  0.025641                  0.410256   \n",
       "13106                  0.000000                  0.105263   \n",
       "13111                  0.000000                  0.222222   \n",
       "\n",
       "       frac f valence electrons  G_VRH  \n",
       "0                      0.200000     13  \n",
       "1                      0.000000     14  \n",
       "3                      0.368421     18  \n",
       "6                      0.000000     21  \n",
       "7                      0.000000     16  \n",
       "...                         ...    ...  \n",
       "13102                  0.000000     38  \n",
       "13103                  0.875000     10  \n",
       "13105                  0.358974     60  \n",
       "13106                  0.684211     40  \n",
       "13111                  0.481481     36  \n",
       "\n",
       "[10534 rows x 123 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "286e54bf-ec5a-40eb-b6a0-a93471ad955c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "features shape: (10534, 120), target shape: (10534,)\n",
      "\n",
      "X_train shape: (8953, 120), y_train shape: (8953,)\n",
      " X_test shape: (1581, 120), y_test.shape:(1581,)\n"
     ]
    }
   ],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "x = df3.values[:,2:-1] # Select all rows for all columns except for last (index -1)\n",
    "y = df3.values[:,-1] # Select all rows for last column (index -1)\n",
    "\n",
    "print(f'features shape: {x.shape}, target shape: {y.shape}')\n",
    "\n",
    "x_train, x_test, y_train, y_test = train_test_split(x, y, train_size=0.85, test_size=0.15, shuffle=True, random_state=67) # Split X,y into train test sets (Train = 75 % of data, Test = 25 % of data)\n",
    "                                                                                                                          # Select a random_state seed so that your results are reproducible,\n",
    "\n",
    "print(f'\\nX_train shape: {x_train.shape}, y_train shape: {y_train.shape}\\n',\n",
    "      f'X_test shape: {x_test.shape}, y_test.shape:{y_test.shape}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "27c577c4-fb80-47db-9d67-2f13d2aa4aa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.preprocessing import StandardScaler\n",
    "\n",
    "# Normalize input data\n",
    "scaler = StandardScaler()\n",
    "x_train_scaled = scaler.fit_transform(x_train)\n",
    "x_test_scaled = scaler.transform(x_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "34063e67-3d21-493a-bdcf-31403d4e615e",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train = np.array(x_train_scaled)\n",
    "y_train = np.array(y_train)\n",
    "\n",
    "x_test = np.array(x_test_scaled)\n",
    "y_test = np.array(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "eb2bf4c1-b343-43d1-be23-c4f1994153dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train_tensor = tf.convert_to_tensor(x_train, dtype=tf.float64)\n",
    "y_train_tensor = tf.convert_to_tensor(y_train, dtype=tf.float64)\n",
    "\n",
    "x_test_tensor = tf.convert_to_tensor(x_test, dtype=tf.float64)\n",
    "y_test_tensor = tf.convert_to_tensor(y_test, dtype=tf.float64)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "9a9b7600-c6a8-4724-b7f0-dc54bfa189c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "tf.keras.utils.set_random_seed(1)\n",
    "tf.config.experimental.enable_op_determinism()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "9cd0fefb-b3f1-4284-9981-25769bb6ec64",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\12053\\AppData\\Roaming\\Python\\Python310\\site-packages\\keras\\src\\layers\\core\\dense.py:86: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n",
      "  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"sequential\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">12,221</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ batch_normalization             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">101</span>)            │           <span style=\"color: #00af00; text-decoration-color: #00af00\">404</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">201</span>)            │        <span style=\"color: #00af00; text-decoration-color: #00af00\">20,502</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ batch_normalization_1           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">201</span>)            │           <span style=\"color: #00af00; text-decoration-color: #00af00\">804</span> │\n",
       "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">81</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">16,362</span> │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>)              │            <span style=\"color: #00af00; text-decoration-color: #00af00\">82</span> │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m101\u001b[0m)            │        \u001b[38;5;34m12,221\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ batch_normalization             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m101\u001b[0m)            │           \u001b[38;5;34m404\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m201\u001b[0m)            │        \u001b[38;5;34m20,502\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ batch_normalization_1           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m201\u001b[0m)            │           \u001b[38;5;34m804\u001b[0m │\n",
       "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_2 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m81\u001b[0m)             │        \u001b[38;5;34m16,362\u001b[0m │\n",
       "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
       "│ dense_3 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m)              │            \u001b[38;5;34m82\u001b[0m │\n",
       "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">50,375</span> (196.78 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m50,375\u001b[0m (196.78 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">49,771</span> (194.42 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m49,771\u001b[0m (194.42 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">604</span> (2.36 KB)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m604\u001b[0m (2.36 KB)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 7ms/step - R2Score: -1.2026 - loss: 3652.4729 - mae: 46.7533 - val_R2Score: 0.1936 - val_loss: 1099.5463 - val_mae: 26.1976\n",
      "Epoch 2/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.5946 - loss: 671.6720 - mae: 18.4828 - val_R2Score: 0.6172 - val_loss: 521.9039 - val_mae: 15.4168\n",
      "Epoch 3/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.7095 - loss: 481.1740 - mae: 14.4247 - val_R2Score: 0.6678 - val_loss: 453.0320 - val_mae: 13.9260\n",
      "Epoch 4/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - R2Score: 0.7488 - loss: 416.0439 - mae: 13.3338 - val_R2Score: 0.6884 - val_loss: 424.8325 - val_mae: 13.2409\n",
      "Epoch 5/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.7768 - loss: 369.6125 - mae: 12.5728 - val_R2Score: 0.6958 - val_loss: 414.8344 - val_mae: 12.9531\n",
      "Epoch 6/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.7984 - loss: 333.6784 - mae: 11.9836 - val_R2Score: 0.6971 - val_loss: 413.0003 - val_mae: 12.8360\n",
      "Epoch 7/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8171 - loss: 302.6452 - mae: 11.4629 - val_R2Score: 0.6962 - val_loss: 414.2261 - val_mae: 12.7931\n",
      "Epoch 8/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8334 - loss: 275.6513 - mae: 10.9961 - val_R2Score: 0.6947 - val_loss: 416.2827 - val_mae: 12.7679\n",
      "Epoch 9/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8468 - loss: 253.4624 - mae: 10.5988 - val_R2Score: 0.6914 - val_loss: 420.7467 - val_mae: 12.7608\n",
      "Epoch 10/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8578 - loss: 235.2379 - mae: 10.2466 - val_R2Score: 0.6868 - val_loss: 427.1164 - val_mae: 12.8081\n",
      "Epoch 11/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8670 - loss: 220.0307 - mae: 9.9256 - val_R2Score: 0.6834 - val_loss: 431.7453 - val_mae: 12.8220\n",
      "Epoch 12/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8746 - loss: 207.3541 - mae: 9.6433 - val_R2Score: 0.6805 - val_loss: 435.6985 - val_mae: 12.8194\n",
      "Epoch 13/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8819 - loss: 195.4031 - mae: 9.3490 - val_R2Score: 0.6802 - val_loss: 436.0221 - val_mae: 12.7899\n",
      "Epoch 14/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step - R2Score: 0.8881 - loss: 185.1234 - mae: 9.0933 - val_R2Score: 0.6783 - val_loss: 438.6439 - val_mae: 12.7585\n",
      "Epoch 15/15\n",
      "\u001b[1m81/81\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 3ms/step - R2Score: 0.8941 - loss: 175.1752 - mae: 8.8328 - val_R2Score: 0.6758 - val_loss: 442.0090 - val_mae: 12.7558\n"
     ]
    }
   ],
   "source": [
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, BatchNormalization\n",
    "\n",
    "\n",
    "model = Sequential()\n",
    "model.add(Dense(101, activation='relu', input_shape=(120,)))\n",
    "model.add(BatchNormalization())  # Add BatchNormalization layer\n",
    "model.add(Dense(201, activation='relu'))  # Add another hidden layer\n",
    "model.add(BatchNormalization())  # Add BatchNormalization layer\n",
    "model.add(Dense(81, activation='relu'))  # Add another hidden layer\n",
    "model.add(Dense(1, activation='linear'))  # Use linear activation for regression\n",
    "\n",
    "model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.001), loss='mse', metrics=['mae','R2Score'])  # Use mean squared error for regression\n",
    "\n",
    "model.summary()\n",
    "\n",
    "hist = model.fit(x_train_tensor, y_train_tensor, epochs=15, batch_size=100, validation_split=0.1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "1a16aac9-dc58-42ea-9b81-f6b2e1c4bfa7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m50/50\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - R2Score: 0.7853 - loss: 377.9965 - mae: 12.2981\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[373.5174865722656, 12.612517356872559, 0.7510794401168823]"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.evaluate(x_test_tensor, y_test_tensor)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "ea8ccd44-324c-40fc-96ad-01978fdb70a1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m50/50\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 4ms/step\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Predict the values using the trained model\n",
    "y_pred = model.predict(x_test_tensor)\n",
    "\n",
    "# Plot the actual vs predicted values\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.scatter(y_pred,y_test, alpha=0.5)\n",
    "plt.title('MLP NN Shear Modulus')\n",
    "plt.xlabel('Actual Values (y_test)')\n",
    "plt.xlim(0,300)\n",
    "plt.ylabel('Predicted Values (y_pred)')\n",
    "plt.grid(True)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "f937e2b2-8df3-4119-b867-4d35a67413ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "from keras.saving import load_model\n",
    "\n",
    "model.save(\"Shear_model.keras\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "820e1ed9-a44a-4441-b47f-d7e998d9ce18",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
